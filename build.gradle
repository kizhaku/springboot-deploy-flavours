plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
    id 'jacoco'
    id "org.sonarqube" version "4.4.1.3373"
}

group = 'com.kizhaku'
version = '1.0'
description = 'Springboot Project Template with Deployment Flavours'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9'
	implementation 'org.mapstruct:mapstruct:1.6.3'
	implementation 'org.aspectj:aspectjweaver:1.9.24'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.3'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
    useJUnitPlatform()
    // ensure the coverage report is generated whenever tests run
    finalizedBy jacocoTestReport
}

tasks.jacocoTestReport {
    dependsOn test
    reports {
        xml.required.set(true)   // SonarQube needs XML
        html.required.set(true)  // nice to have locally
        csv.required.set(false)
    }
}


tasks.named('test') {
	useJUnitPlatform()
}

sonar {
    properties {
        property "sonar.projectKey", "springapp"
        property "sonar.host.url", "http://localhost:60694"
        property "sonar.login", "squ_56608ab3a28d5d90770e5ac83652196ec52efc65"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
    }
}
