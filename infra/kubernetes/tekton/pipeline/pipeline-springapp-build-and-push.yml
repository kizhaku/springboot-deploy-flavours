apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: springapp-build-and-push
  namespace: tekton-pipelines
spec:
  workspaces:
    - name: shared-workspace
  params:
    - name: IMAGE
      type: string
  tasks:
    - name: fetch-repo
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: https://github.com/kizhaku/springboot-deploy-flavours.git
        - name: revision
          value: main
        - name: deleteExisting
          value: "true"

    - name: run-tests
      runAfter: [fetch-repo]
      taskRef:
        name: gradle
      workspaces:
        - name: source
          workspace: shared-workspace
      params:
        - name: GRADLE_IMAGE
          value: gradle:8.10.2-jdk21
        - name: TASKS
          value:
           - test
           - jacocoTestReport

    - name: sonar-analysis
      runAfter: [run-tests]
      taskSpec:
        steps:
          - name: sonar-analysis
            image: gradle:8.10.2-jdk21
            workingDir: /workspace/source
            script: |
              gradle sonar --no-daemon \
                -Dsonar.host.url=$SONAR_HOST_URL \
                -Dsonar.token=$SONAR_TOKEN
            env:
              - name: SONAR_HOST_URL
                value: "http://sonarqube-sonarqube.sonarqube:9000"
              - name: SONAR_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: sonar-auth
                    key: SONAR_TOKEN
            resources:
              requests:
                memory: "1Gi"
                cpu: "500m"
              limits:
                memory: "2Gi"
                cpu: "1"
        workspaces:
          - name: source
      workspaces:
        - name: source
          workspace: shared-workspace

    - name: quality-gate
      runAfter: [sonar-analysis]
      taskSpec:
        steps:
          - name: quality-gate-check
            image: akizhaku/ci-tools:latest
            script: |
              #!/bin/sh
              set -e
              
              echo "Checking SonarQube Quality Gate..."
              
              analysisId=$(curl -s -u $SONAR_TOKEN: \
              "$SONAR_HOST_URL/api/project_analyses/search?project=springapp" \
              | jq -r '.analyses[0].key')
              
              status=$(curl -s -u $SONAR_TOKEN: \
              "$SONAR_HOST_URL/api/qualitygates/project_status?analysisId=$analysisId" \
              | jq -r '.projectStatus.status')
              
              echo "Quality Gate status: $status"
              if [ "$status" != "OK" ]; then
                echo "Quality Gate failed"
                exit 1
              fi
              echo "Quality Gate passed"
            env:
              - name: SONAR_HOST_URL
                value: "http://sonarqube-sonarqube.sonarqube:9000"
              - name: SONAR_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: sonar-auth
                    key: SONAR_TOKEN

    - name: build-jar
      runAfter: [quality-gate]
      taskRef:
        name: gradle
      workspaces:
        - name: source
          workspace: shared-workspace
      params:
        - name: GRADLE_IMAGE
          value: gradle:8.10.2-jdk21
        - name: TASKS
          value:
            - build
            - "-x"
            - test

    - name: build-and-push-image
      runAfter: [build-jar]
      taskRef:
        name: buildah
      workspaces:
        - name: source
          workspace: shared-workspace
      params:
        - name: IMAGE
          value: $(params.IMAGE)
        - name: DOCKERFILE
          value: Dockerfile
        - name: CONTEXT
          value: .
        - name: TLSVERIFY
          value: "false"